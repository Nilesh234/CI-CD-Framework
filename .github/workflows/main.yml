name: CI/CD Pipeline Framework

on:
  push:
    branches: [main, develop, release/*, hotfix/*]
  pull_request:

jobs:
  parse-blueprint:
    runs-on: ubuntu-latest
    outputs:
      tech: ${{ steps.extract.outputs.tech }}
      deploy: ${{ steps.extract.outputs.deploy }}
      build_type: ${{ steps.extract.outputs.build_type }}
    
    steps:
      - uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - run: pip install pyyaml

      - run: mkdir -p outputs

      - name: Parse blueprint
        run: python scripts/parse_blueprint.py

      - name: Verify outputs
        run: |
          ls -la outputs/
          [ -f outputs/output_stages.json ] || exit 1

      - name: Set outputs
        id: extract
        run: |
          echo "tech=$(cat outputs/output_tech.txt)" >> $GITHUB_OUTPUT
          echo "deploy=$(cat outputs/output_deploy.txt)" >> $GITHUB_OUTPUT
          echo "build_type=$(cat outputs/output_build_type.txt)" >> $GITHUB_OUTPUT

      - uses: actions/upload-artifact@v4
        with:
          name: pipeline-artifacts
          path: |
            outputs/output_*.txt
            outputs/output_stages.json
          retention-days: 1

  run-ci:
    needs: parse-blueprint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      - uses: actions/download-artifact@v4
        with:
          name: pipeline-artifacts
          path: outputs/

      - run: |
          echo "Loaded stages:"
          cat outputs/output_stages.json