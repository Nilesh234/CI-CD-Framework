name: Python CI Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  run-ci:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install Dependencies
        run: |
          pip install pyyaml
          pip install -r python-app/requirements.txt

      - name: Create Required Directories
        run: |
          mkdir -p blueprints
          mkdir -p outputs
          touch blueprints/pipeline-blueprint.yaml  # Create empty file if none exists

      - name: Parse Blueprint (With Fallback)
        id: parse
        run: |
          echo "Running Blueprint Parser..."
          # Run parser and always exit with 0 status
          python3 scripts/parse_blueprint.py || true
          
          # Verify and create all required output files
          [ -f output_stages.json ] || echo '{"stages": []}' > output_stages.json
          [ -f output_tech.txt ] || echo '' > output_tech.txt
          [ -f output_deploy.txt ] || echo '' > output_deploy.txt
          [ -f output_build_type.txt ] || echo 'full' > output_build_type.txt
          
          echo "Parser completed (status: $?)"

      - name: Validate Outputs
        run: |
          echo "Validating output files..."
          ls -la output_*
          echo "--- output_stages.json content ---"
          cat output_stages.json

      - name: Run Tests
        run: |
          echo "Running Python tests..."
          python3 -m unittest discover python-app/

      - name: Upload Artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: pipeline-artifacts
          path: |
            output_*
            blueprints/*